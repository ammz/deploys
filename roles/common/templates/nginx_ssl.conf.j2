upstream app_server_wsgiapp {
    server localhost:{{ wsgi_server_port }} fail_timeout=0;
}

server {
  listen 80;
  server_name {{ fqdn_prod }};
  rewrite ^(.*) https://$server_name$1 permanent;
}

server {
  server_name           {{ fqdn_prod }};
  listen                443 ssl
  ssl_certificate       /etc/nginx/{{ app_name }}/{{ app_name }}.crt;
  ssl_certificate_key   /etc/nginx/{{ app_name }}/{{ app_name }}.key;
  ssl_session_timeout   1d;
  ssl_session_cache     shared:SSL:50m;
  ssl_protocols	        TLSv1.1 TLSv1.2;
  ssl_ciphers           'sds';
  ssl_prefer_server_ciphers on;
  access_log            /var/log/nginx/{{ fqdn_prod }}.access.log;
  error_log             /var/log/nginx/{{ fqdn_prod }}.errot.log info;
  keepalive_timeout     5;

  # nginx sirve los ficheros estáticos que nunca envía al servidor WSGI
  location /static {
    autoindex on;
    alias {{ app_dir }}/{{ app_name }}/static;
  }

  location / {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_redirect off;
      if (!-f $request_filename) {
        proxy_pass http:/app_server_wsgiapp;
	break;
    }
  }

  # esta sección permite que Nginx haga reverse proxy para websockets
  location /socket.io {
    proxy_pass http://app_server_wsgiapp/soket.io;
    proxy_redirect off;
    proxy_buffering off;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
  }
}